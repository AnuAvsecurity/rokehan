<?php

/**
 * BaseMember
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $invite_member_id
 * @property boolean $is_login_rejected
 * @property Member $Member
 * @property Doctrine_Collection $MemberRelationship
 * @property Doctrine_Collection $MemberImage
 * @property Doctrine_Collection $MemberProfile
 * @property Doctrine_Collection $CommunityMember
 * @property Doctrine_Collection $CommunityMemberPosition
 * @property Doctrine_Collection $MemberConfig
 * @property Doctrine_Collection $OAuthConsumerInformation
 * @property Doctrine_Collection $OAuthMemberToken
 * @property Doctrine_Collection $OpenIDTrustLog
 * @property Doctrine_Collection $Activities
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method string              getName()                     Returns the current record's "name" value
 * @method integer             getInviteMemberId()           Returns the current record's "invite_member_id" value
 * @method boolean             getIsLoginRejected()          Returns the current record's "is_login_rejected" value
 * @method Member              getMember()                   Returns the current record's "Member" value
 * @method Doctrine_Collection getMemberRelationship()       Returns the current record's "MemberRelationship" collection
 * @method Doctrine_Collection getMemberImage()              Returns the current record's "MemberImage" collection
 * @method Doctrine_Collection getMemberProfile()            Returns the current record's "MemberProfile" collection
 * @method Doctrine_Collection getCommunityMember()          Returns the current record's "CommunityMember" collection
 * @method Doctrine_Collection getCommunityMemberPosition()  Returns the current record's "CommunityMemberPosition" collection
 * @method Doctrine_Collection getMemberConfig()             Returns the current record's "MemberConfig" collection
 * @method Doctrine_Collection getOAuthConsumerInformation() Returns the current record's "OAuthConsumerInformation" collection
 * @method Doctrine_Collection getOAuthMemberToken()         Returns the current record's "OAuthMemberToken" collection
 * @method Doctrine_Collection getOpenIDTrustLog()           Returns the current record's "OpenIDTrustLog" collection
 * @method Doctrine_Collection getActivities()               Returns the current record's "Activities" collection
 * @method Member              setId()                       Sets the current record's "id" value
 * @method Member              setName()                     Sets the current record's "name" value
 * @method Member              setInviteMemberId()           Sets the current record's "invite_member_id" value
 * @method Member              setIsLoginRejected()          Sets the current record's "is_login_rejected" value
 * @method Member              setMember()                   Sets the current record's "Member" value
 * @method Member              setMemberRelationship()       Sets the current record's "MemberRelationship" collection
 * @method Member              setMemberImage()              Sets the current record's "MemberImage" collection
 * @method Member              setMemberProfile()            Sets the current record's "MemberProfile" collection
 * @method Member              setCommunityMember()          Sets the current record's "CommunityMember" collection
 * @method Member              setCommunityMemberPosition()  Sets the current record's "CommunityMemberPosition" collection
 * @method Member              setMemberConfig()             Sets the current record's "MemberConfig" collection
 * @method Member              setOAuthConsumerInformation() Sets the current record's "OAuthConsumerInformation" collection
 * @method Member              setOAuthMemberToken()         Sets the current record's "OAuthMemberToken" collection
 * @method Member              setOpenIDTrustLog()           Sets the current record's "OpenIDTrustLog" collection
 * @method Member              setActivities()               Sets the current record's "Activities" collection
 * 
 * @package    OpenPNE
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMember extends opDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('member');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'comment' => 'Serial number',
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'default' => '',
             'notnull' => true,
             'comment' => 'Nickname',
             'length' => 64,
             ));
        $this->hasColumn('invite_member_id', 'integer', 4, array(
             'type' => 'integer',
             'comment' => 'Member id of the person who invited this member',
             'length' => 4,
             ));
        $this->hasColumn('is_login_rejected', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             'comment' => 'Rejected member',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('comment', 'Saves informations of members');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Member', array(
             'local' => 'invite_member_id',
             'foreign' => 'id',
             'onDelete' => 'set null'));

        $this->hasMany('MemberRelationship', array(
             'local' => 'id',
             'foreign' => 'member_id_to'));

        $this->hasMany('MemberImage', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('MemberProfile', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('CommunityMember', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('CommunityMemberPosition', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('MemberConfig', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('OAuthConsumerInformation', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('OAuthMemberToken', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('OpenIDTrustLog', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('ActivityData as Activities', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $opactivatebehavior0 = new opActivateBehavior(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($opactivatebehavior0);
    }
}